version: '3'

services:
  web:
    build: .
    command: ["./wait-for-it.sh", "kafkaserver:9092", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    environment:
      - FILE_UPLOAD_MAX_MEMORY_SIZE = 2500000      
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgresql
      - kafkaserver
  
  consumer:
    build: .
    command: ["./wait-for-it.sh", "kafkaserver:9092", "--", "python", "consumer.py"]
    volumes:
      - .:/code
    depends_on:
      - postgresql
      - kafkaserver

  postgresql:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cyber_batch_job
      POSTGRES_INITDB_WALDIR: /var/lib/postgresql/logs
    # volumes:
    #   - postgresql-data:/var/lib/postgresql/data
    #   - postgresql-tranlogs:/var/lib/postgresql/logs
    expose:
      - "5432"
  
  kafkaserver:
    image: "spotify/kafka:latest"
    container_name: kafka
    hostname: kafkaserver
    expose:
      - "2181"
      - "9092"
    environment:
      ADVERTISED_HOST: kafkaserver
      ADVERTISED_PORT: 9092

  kafka_manager:
    image: "mzagar/kafka-manager-docker:1.3.3.4"
    container_name: kafkamanager
    expose:
      - "9000"
    links:
      - kafkaserver
    environment:
      ZK_HOSTS: "kafkaserver:2181"

# volumes:
#   postgresql-data:
#   postgresql-tranlogs: