# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-08-01 18:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import rest_services.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False, verbose_name='The id of the batch')),
                ('batch_name', models.CharField(max_length=100, verbose_name='The name of the batch')),
                ('batch_status', models.CharField(choices=[('DONE', 'DONE'), ('INIT', 'INIT'), ('CANCELLED', 'CANCELLED'), ('FAILED', 'FAILED')], default='INIT', max_length=9, verbose_name='The status of the batch')),
                ('source_file_name', models.FileField(upload_to='batch_files', validators=[rest_services.validators.validate_files], verbose_name='The input source file')),
                ('total_ips', models.IntegerField(null=True, verbose_name='The total number of IP records')),
                ('file_format', models.CharField(choices=[('C', 'CSV'), ('T', 'TSV'), ('X', 'XLSX')], max_length=5, verbose_name='The format of the input source file')),
                ('user_created_by', models.CharField(max_length=100, verbose_name='The id of user who created the batch')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='The timestamp when created')),
                ('cancelled_at', models.DateTimeField(null=True, verbose_name='The timestamp when cancelled')),
                ('shodan_input_records', models.IntegerField(null=True, verbose_name='The total number of shodan Input records')),
                ('shodan_processed_records', models.IntegerField(null=True, verbose_name='The total number of shodan Output records')),
                ('shodan_failed_records', models.IntegerField(null=True, verbose_name='The total number of shodan Error records')),
                ('shodan_records_update', models.CharField(default='N', max_length=1, verbose_name='shodan records updated or not')),
                ('domainiq_input_records', models.IntegerField(null=True, verbose_name='The total number of domainiq Input records')),
                ('domainiq_processed_records', models.IntegerField(null=True, verbose_name='The total number of domainiq Output records')),
                ('domainiq_failed_records', models.IntegerField(null=True, verbose_name='The total number of domainiq Error records')),
                ('domainiq_records_update', models.CharField(default='N', max_length=1, verbose_name='domainIQ records updated or not')),
                ('censys_input_records', models.IntegerField(null=True, verbose_name='The total number of censys Input records')),
                ('censys_processed_records', models.IntegerField(null=True, verbose_name='The total number of censys Output records')),
                ('censys_failed_records', models.IntegerField(null=True, verbose_name='The total number of censys Error records')),
                ('censys_records_update', models.CharField(default='N', max_length=1, verbose_name='censys records updated or not')),
            ],
            options={
                'db_table': 'batch',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='student name')),
                ('marks', models.IntegerField(null=True, verbose_name='student marks')),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50, null=True, verbose_name='student city')),
            ],
            options={
                'db_table': 'empaddress',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='stu_add',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rest_services.EmployeeAddress'),
        ),
    ]
